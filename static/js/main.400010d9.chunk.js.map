{"version":3,"sources":["assets/images/bg-stars.svg","assets/images/pattern-hills.svg","components/Display.style.js","components/Display.js","utils.js","TimeContext.js","components/Countdown.js","components/SocialIcons.js","App.js","assets/styles/GlobalStyle.js","index.js"],"names":["Wrapper","styled","div","InnerWrapper","FlipWrapper","Label","span","Rectangle","top","Display","label","value","timeLeft","wrapper","useRef","topRect","bottomRect","setText","node","innerText","useEffect","element","current","bottom","children","nextTop","prevBtm","gsap","set","transformStyle","tl","timeline","call","rotationX","backfaceVisibility","fromTo","duration","ref","getTimeLeft","date","difference","Math","floor","abs","Date","time","days","hours","minutes","seconds","TimeContext","createContext","TimeProvider","useMemo","setDate","getDate","Provider","Countdown","useContext","useState","setTimeLeft","timeout","setTimeout","clearTimeout","Object","keys","map","key","SocialIcons","ViewWrapper","hills","stars","StyledTitle","h1","App","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.400010d9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bg-stars.166881a1.svg\";","export default __webpack_public_path__ + \"static/media/pattern-hills.815d688f.svg\";","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tfont-size: 100%;\n\n\t@media (min-width: 620px) {\n\t\tfont-size: 1.2rem;\n\t}\n`;\n\nexport const InnerWrapper = styled.div`\n\tbox-shadow: 0 0.3em 0em hsl(240, 16%, 12%);\n\tborder-radius: 0.3em;\n\tposition: relative;\n`;\n\nexport const FlipWrapper = styled.div`\n\tposition: absolute;\n\tinset: 0;\n\tz-index: 1;\n`;\n\nexport const Label = styled.span`\n\tdisplay: block;\n\twidth: 100%;\n\tcolor: hsl(234, 20%, 60%);\n\tfont-size: 0.45rem;\n\ttext-align: center;\n\tmargin-top: 2em;\n\ttext-transform: uppercase;\n\tletter-spacing: 0.5em;\n`;\n\nexport const Rectangle = styled.div`\n\tbackground-color: ${({ top }) =>\n\t\ttop ? 'hsl(236, 21%, 20%);' : 'hsl(236, 21%, 26%);'};\n\tcolor: ${({ top }) => (top ? 'hsl(346, 61%, 57%);' : 'hsl(346, 93%, 67%);')};\n\ttext-align: center;\n\theight: 2em;\n\twidth: 4.2em;\n\toverflow: hidden;\n\tposition: relative;\n\tborder-radius: ${({ top }) => (top ? '0.3em 0.3em 0 0' : '0 0 0.3em 0.3em')};\n\ttransform-origin: ${({ top }) => (top ? 'bottom' : 'top')};\n\n\tspan {\n\t\tfont-size: 2.4rem;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\tposition: absolute;\n\t\theight: 100%;\n\t\twidth: 100%;\n\t\ttop: ${({ top }) => (top ? '50%' : '-50%')};\n\t\tleft: 50%;\n\t\ttransform: ${({ top }) =>\n\t\t\ttop ? 'translate(-50%, 0)' : ' translate(-50%, 0)'};\n\n\t\t&::after,\n\t\t&::before {\n\t\t\tcontent: '';\n\t\t\tposition: absolute;\n\t\t\theight: 7px;\n\t\t\twidth: 7px;\n\t\t\tbackground-color: hsl(240, 16%, 12%);\n\t\t\tborder-radius: 50%;\n\t\t}\n\n\t\t&::before {\n\t\t\tleft: 0;\n\t\t\ttransform: translate(-50%);\n\t\t}\n\t\t&::after {\n\t\t\tright: 0;\n\t\t\ttransform: translate(50%);\n\t\t}\n\t}\n`;\n","import React, { useRef, useEffect } from 'react';\nimport {\n\tWrapper,\n\tInnerWrapper,\n\tRectangle,\n\tLabel,\n\tFlipWrapper,\n} from './Display.style';\nimport gsap from 'gsap';\n\nconst Display = ({ label, timeLeft }) => {\n\t// const value =\n\t// \ttimeLeft[label] / 10 >= 1 ? timeLeft[label] : `0${timeLeft[label]}`;\n\tconst value = timeLeft[label];\n\n\tconst wrapper = useRef(null);\n\tconst topRect = useRef(null);\n\tconst bottomRect = useRef(null);\n\n\tconst setText = (value, node, label) => {\n\t\tif (label === 'hours' && value === 24) return (node.innerText = '00');\n\t\tif (label !== 'day' && value === 60) return (node.innerText = '00');\n\t\tif (value < 10) return (node.innerText = `0${value}`);\n\t\treturn (node.innerText = value);\n\t};\n\n\tuseEffect(() => {\n\t\tconst element = wrapper.current;\n\t\tconst bottom = wrapper.current.children[1];\n\t\tconst top = wrapper.current.children[0];\n\t\tconst nextTop = topRect.current.children[0];\n\t\tconst prevBtm = bottomRect.current.children[0];\n\n\t\tgsap.set(element, { transformStyle: 'preserve-3d' });\n\n\t\tconst tl = gsap.timeline();\n\t\ttl.call(setText, [value, nextTop, label]);\n\t\ttl.call(setText, [value, bottom.children[0], label]);\n\t\ttl.call(setText, [value + 1, top.children[0], label]);\n\t\ttl.call(setText, [value + 1, prevBtm, label]);\n\t\ttl.set(bottom, {\n\t\t\trotationX: 180,\n\t\t\tbackfaceVisibility: 'hidden',\n\t\t});\n\t\ttl.fromTo(element, { rotationX: 0 }, { rotationX: -180, duration: 0.4 });\n\t\ttl.call(setText, [value, top.children[0]]);\n\t\ttl.call(setText, [value, prevBtm]);\n\t}, [label, value]);\n\n\treturn (\n\t\t<Wrapper>\n\t\t\t<InnerWrapper>\n\t\t\t\t<Rectangle top ref={topRect}>\n\t\t\t\t\t<span />\n\t\t\t\t</Rectangle>\n\t\t\t\t<FlipWrapper ref={wrapper}>\n\t\t\t\t\t<Rectangle top>\n\t\t\t\t\t\t<span />\n\t\t\t\t\t</Rectangle>\n\t\t\t\t\t<Rectangle>\n\t\t\t\t\t\t<span />\n\t\t\t\t\t</Rectangle>\n\t\t\t\t</FlipWrapper>\n\t\t\t\t<Rectangle ref={bottomRect}>\n\t\t\t\t\t<span />\n\t\t\t\t</Rectangle>\n\t\t\t</InnerWrapper>\n\t\t\t<Label>{label}</Label>\n\t\t</Wrapper>\n\t);\n};\n\nexport default Display;\n","export const getTimeLeft = (date) => {\n\tconst difference = Math.floor(Math.abs(new Date() - date));\n\tconst time = {\n\t\tdays: 0,\n\t\thours: 0,\n\t\tminutes: 0,\n\t\tseconds: 0,\n\t};\n\n\tif (difference > 0) {\n\t\ttime.days = Math.floor(difference / (1000 * 60 * 60 * 24));\n\t\ttime.hours = Math.floor((difference / (1000 * 60 * 60)) % 24);\n\t\ttime.minutes = Math.floor((difference / 1000 / 60) % 60);\n\t\ttime.seconds = Math.floor((difference / 1000) % 60);\n\t}\n\n\treturn time;\n};\n","import React, { createContext, useMemo } from 'react';\n\nexport const TimeContext = createContext();\n\nexport const TimeProvider = ({ children }) => {\n\t// date format '2021-12-24T22:00:00'\n\tconst date = useMemo(() => {\n\t\tconst date = new Date();\n\t\tdate.setDate(date.getDate() + 2);\n\t\treturn date;\n\t}, []);\n\n\tconst value = { date };\n\treturn <TimeContext.Provider value={value}>{children}</TimeContext.Provider>;\n};\n","import React, { useState, useEffect, useContext } from 'react';\nimport styled from 'styled-components';\nimport Display from './Display';\nimport { getTimeLeft } from '../utils';\nimport { TimeContext } from '../TimeContext';\n\nconst Wrapper = styled.div`\n\tdisplay: flex;\n\tgap: 1em;\n`;\n\nconst Countdown = () => {\n\tconst { date } = useContext(TimeContext);\n\tconst [timeLeft, setTimeLeft] = useState(getTimeLeft(date));\n\n\tuseEffect(() => {\n\t\tconst timeout = setTimeout(() => {\n\t\t\tsetTimeLeft(getTimeLeft(date));\n\t\t}, 1000);\n\n\t\treturn () => clearTimeout(timeout);\n\t}, [timeLeft, date]);\n\n\treturn (\n\t\t<Wrapper>\n\t\t\t{Object.keys(timeLeft).map((key) => (\n\t\t\t\t<Display key={key} label={key} timeLeft={timeLeft} />\n\t\t\t))}\n\t\t</Wrapper>\n\t);\n};\n\nexport default Countdown;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { BsFacebook } from 'react-icons/bs';\nimport { BsPinterest } from 'react-icons/bs';\nimport { BsInstagram } from 'react-icons/bs';\n\nconst Wrapper = styled.div`\n\tdisplay: flex;\n\tfont-size: 1.5rem;\n\tgap: 1em;\n\tcolor: hsl(234, 20%, 59%);\n\tpadding: 1em 0 0;\n\tmargin: auto 0 8vh;\n\n\tsvg:hover {\n\t\tcolor: hsl(346, 91%, 67%);\n\t\tcursor: pointer;\n\t}\n`;\n\nconst SocialIcons = () => {\n\treturn (\n\t\t<Wrapper>\n\t\t\t<BsFacebook />\n\t\t\t<BsPinterest />\n\t\t\t<BsInstagram />\n\t\t</Wrapper>\n\t);\n};\n\nexport default SocialIcons;\n","import React from 'react';\nimport styled from 'styled-components';\nimport stars from './assets/images/bg-stars.svg';\nimport hills from './assets/images/pattern-hills.svg';\nimport Countdown from './components/Countdown';\nimport SocialIcons from './components/SocialIcons';\nimport { TimeProvider } from './TimeContext';\n\nconst ViewWrapper = styled.div`\n\tmin-height: 100vh;\n\tbackground-color: hsl(257, 19%, 14%);\n\tbackground-image: url(${hills}), url(${stars});\n\tbackground-repeat: no-repeat, repeat;\n\tbackground-position: bottom right, top;\n\tbackground-size: 300%, contain;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\n\t@media (min-width: 1024px) {\n\t\tbackground-size: 100%, contain;\n\t}\n`;\n\nconst StyledTitle = styled.h1`\n\ttext-align: center;\n\tcolor: hsl(0, 0%, 100%);\n\tfont-size: 1.2rem;\n\tletter-spacing: 0.2em;\n\tmargin: 4em 0;\n\tpadding: 0 1.3em;\n`;\n\nconst App = () => {\n\treturn (\n\t\t<TimeProvider>\n\t\t\t<ViewWrapper>\n\t\t\t\t<StyledTitle>WE'RE LAUNCHING SOON</StyledTitle>\n\t\t\t\t<Countdown />\n\t\t\t\t<SocialIcons />\n\t\t\t</ViewWrapper>\n\t\t</TimeProvider>\n\t);\n};\n\nexport default App;\n","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n  \n  *,*::after,*::before{\n    box-sizing: border-box;\n    margin: 0;\n    font-family: 'Red Hat Text', sans-serif;\n  }\n\n  html{\n    font-size: 100%;\n\n    @media (min-width: 620px) {\n\t\tfont-size: 120%;\n\t  }\n    @media (min-width: 860px) {\n      font-size: 140%;\n    }\n    @media (min-width: 1024px) {\n      font-size: 160%;\n    }\n    @media (min-width: 1440px) {\n      font-size: 185%;\n    }\n  }\n\n`;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { GlobalStyle } from './assets/styles/GlobalStyle';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<GlobalStyle />\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}